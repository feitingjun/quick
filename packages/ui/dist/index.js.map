{"version":3,"sources":["../src/index.ts","../src/theme/default.ts","../src/theme/index.ts","../src/dicts/hooks.ts","../src/config-provider/context.ts","../src/dicts/index.ts","../src/components/button/index.tsx","../src/components/box/index.tsx","../src/config-provider/index.tsx","../src/components/input/index.tsx","../src/components/input-number/index.tsx","../src/components/table/table.tsx","../src/components/table/column.tsx","../src/components/tooltip/index.tsx","../src/components/space/index.tsx","../src/components/table/summary.tsx"],"sourcesContent":["// antd的react19兼容包\nimport '@ant-design/v5-patch-for-react-19'\nexport * from './theme'\nexport * from './dicts'\n// 组件\nexport * from './components/button'\nexport * from './components/box'\nexport * from './config-provider'\nexport * from './components/input'\nexport * from './components/input-number'\nexport * from './components/table'\n","import { Theme } from './types'\n\nexport const defaultTheme: Theme = {\n  colors: {\n    primary: '#1DA57A',\n    success: '#52c41a',\n    warning: '#faad14',\n    error: '#ff4d4f',\n    info: '#1677ff',\n    link: '#1677ff',\n    text: '#000',\n    secondary: '#616161',\n    border: '#d9d9d9',\n    borderSecondary: '#f0f0f0',\n    disabled: '#c0c0c0'\n  },\n  breakpoints: {\n    sm: '480px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n    '2xl': '1440px'\n  },\n  space: 4,\n  sizes: {\n    controlHeight: 32,\n    controlHeightLg: 40,\n    controlHeightSm: 24,\n    controlHeightXs: 16\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125\n  },\n  fontWeights: {\n    body: 400,\n    bold: 700\n  },\n  fontSizes: {\n    caption: 12,\n    body: 14,\n    subtitle: 16,\n    title: 18,\n    heading: 20,\n    display: 24\n  },\n  borders: {\n    none: 'none',\n    normal: '1px solid {colors.border}',\n    thick: '2px solid {colors.border}',\n    dotted: '1px dotted {colors.border}',\n    thickDotted: '2px dotted {colors.border}'\n  },\n  radii: {\n    none: 0,\n    xs: 2,\n    sm: 4,\n    md: 6\n  },\n  shadows: {\n    none: 'none',\n    box: '0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 9px 28px 8px rgba(0, 0, 0, 0.05)',\n    secondary:\n      '0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 9px 28px 8px rgba(0, 0, 0, 0.05)',\n    tertiary:\n      '0 1px 2px 0 rgba(0, 0, 0, 0.03), 0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02)'\n  },\n  zIndices: {\n    hide: -1,\n    base: 0,\n    docked: 10,\n    dropdown: 1000,\n    sticky: 1100,\n    banner: 1200,\n    overlay: 1300,\n    modal: 1400,\n    popover: 1500,\n    tooltip: 1600,\n    toast: 1700,\n    max: 2147483647\n  }\n}\n","import type { Theme } from './types'\nimport { defaultTheme } from './default'\nexport { useTheme } from '@quick/cssinjs'\n\nexport { type Theme, defaultTheme }\n\nexport const defineTheme = <T extends Theme>(theme: T) => theme\n","import { useContext } from 'react'\nimport { DictItem, Dicts, DictCode } from './types'\nimport { ConfigContext } from '@/config-provider/context'\n\n/**获取全部的字典数据 */\nexport function useDicts() {\n  const { dicts } = useContext(ConfigContext)\n  return dicts\n}\n\n/**根据code获取字典列表数据 */\nexport function useDict<T extends DictCode>(code: T) {\n  const dicts = useDicts()\n  return dicts[code]\n}\n\n/**根据code和value获取字典的某一项 */\nexport function useDictItem<T extends DictCode>(code: T, value: Dicts[T][number]['value']) {\n  const dict = useDict(code)\n  return dict?.find((item: DictItem) => item.value === value)\n}\n\n/**根据字典code和value获取字典的label */\nexport function useDictLabel<T extends DictCode>(code: T, value: Dicts[T][number]['value']) {\n  const item = useDictItem(code, value)\n  return item?.label\n}\n\n/**根据字典code和value获取字典的status */\nexport function useDictStatus<T extends DictCode>(code: T, value: Dicts[T][number]['value']) {\n  const item = useDictItem(code, value)\n  return item?.status\n}\n","import { createContext } from 'react'\nimport { Dicts } from '@/dicts/types'\n\nexport const ConfigContext = createContext<{\n  dicts: Dicts\n}>({\n  dicts: {}\n})\n","export * from './hooks'\nexport * from './types'\nimport type { Dicts } from './types'\n\nexport const defineDicts = <T extends Dicts>(dicts: T) => dicts\n","import { ComponentProps } from 'react'\nimport { styled } from '@quick/cssinjs'\nimport { Button as AntdButton } from 'antd'\n\nexport const Button = styled(AntdButton)\n\nexport type ButtonProps = ComponentProps<typeof Button>\n","import { ComponentProps } from 'react'\nimport { styled } from '@quick/cssinjs'\n\nconst StyledBox = styled('div')\n\nexport type BoxProps = ComponentProps<typeof StyledBox> & {\n  as?: keyof React.JSX.IntrinsicElements\n}\n\nexport const Box = (props: BoxProps) => <StyledBox as={props.as} {...props} />\n","import { useMemo } from 'react'\nimport { StyleProvider } from '@ant-design/cssinjs'\nimport { ThemeProvider, merge } from '@quick/cssinjs'\nimport { ConfigProvider as AntdConfigProvider, ThemeConfig } from 'antd'\nimport { Theme, defaultTheme } from '@/theme'\nimport { Dicts } from '@/dicts'\nimport { ConfigContext } from './context'\n\nexport interface ConfigProviderProps {\n  theme?: Theme\n  dicts?: Dicts\n  children?: React.ReactNode\n}\n\nconst useToken = (theme: Theme) => {\n  return useMemo(\n    () =>\n      ({\n        colorPrimary: theme?.colors?.primary,\n        colorError: theme?.colors?.error,\n        colorInfo: theme?.colors?.info,\n        colorLink: theme?.colors?.link,\n        colorSuccess: theme?.colors?.success,\n        colorWarning: theme?.colors?.warning,\n        colorTextBase: theme?.colors?.text,\n        colorText: theme?.colors?.text,\n        colorTextSecondary: theme?.colors?.secondary,\n        colorBorder: theme?.colors?.border,\n        fontSize: theme?.fontSizes?.body,\n        fontSizeSM: theme?.fontSizes?.caption,\n        fontSizeLG: theme?.fontSizes?.subtitle,\n        fontSizeXL: theme?.fontSizes?.heading,\n        borderRadius: theme?.radii?.sm,\n        borderRadiusXS: theme?.radii?.xs,\n        borderRadiusSM: theme?.radii?.sm,\n        borderRadiusLG: theme?.radii?.md,\n        controlHeight: theme?.sizes?.controlHeight,\n        controlHeightLG: theme?.sizes?.controlHeightLg,\n        controlHeightSM: theme?.sizes?.controlHeightSm,\n        controlHeightXS: theme?.sizes?.controlHeightXs\n      } as ThemeConfig['token']),\n    [theme]\n  )\n}\n\nexport function ConfigProvider({ theme = {}, dicts = {}, children }: ConfigProviderProps) {\n  const margedtheme = useMemo(() => merge(defaultTheme, theme), [theme])\n  const token = useToken(margedtheme)\n  return (\n    <ThemeProvider theme={margedtheme}>\n      <StyleProvider layer>\n        <AntdConfigProvider theme={{ token }}>\n          <ConfigContext.Provider value={{ dicts }}>{children}</ConfigContext.Provider>\n        </AntdConfigProvider>\n      </StyleProvider>\n    </ThemeProvider>\n  )\n}\n","import { Input as AntdInput } from 'antd'\nimport { styled } from '@quick/cssinjs'\n\nexport const Input = styled(AntdInput)\n\nexport type InputProps = React.ComponentProps<typeof AntdInput>\n","import { InputNumber as AntdInputNumber } from 'antd'\nimport { styled } from '@quick/cssinjs'\n\nexport const InputNumber = styled(AntdInputNumber)\n\nexport type InputNumberProps = React.ComponentProps<typeof InputNumber>\n","import { Table as AntdTable, TableProps as AntdTableProps } from 'antd'\nimport { styled } from '@quick/cssinjs'\nimport { useColumns } from './column'\nimport { useSummary } from './summary'\nimport { AnyObject, TableProps, ColumnProps } from './types'\n\nconst StyledTable = styled<React.ComponentType<AntdTableProps<any>>>(AntdTable)\n\n/**仅在 dataSource[number] 类型未知时使用，通过columns内容自动推断 dataSource[number] 的类型  */\nexport function defineColumns<const T extends ColumnProps<AnyObject>[]>(columns: T) {\n  type P = T[number] extends { dataIndex: string } ? T[number]['dataIndex'] : never\n  type Row = {\n    [K in P]: any\n  }\n  return columns as ColumnProps<Row & AnyObject>[]\n}\n\nexport function Table<T extends AnyObject>({\n  columns = [],\n  actionFixed,\n  actionTitle,\n  actionWidth,\n  actions,\n  summaryMap,\n  rowSelection,\n  rowKey = 'id',\n  ...props\n}: TableProps<T>) {\n  const cols = useColumns(columns, actions, actionFixed, actionTitle, actionWidth)\n  const summary = useSummary(cols, summaryMap, rowSelection)\n  return (\n    <StyledTable\n      rowKey={rowKey}\n      columns={cols}\n      rowSelection={rowSelection}\n      summary={summary}\n      {...props}\n    />\n  )\n}\n","import { useMemo } from 'react'\nimport { SxProps } from '@quick/cssinjs'\nimport { zerofill, round, isNumber, thousands, useNavigate, multiply } from '@quick/utils'\nimport { QuestionCircleOutlined } from '@ant-design/icons'\nimport { Tooltip } from '@/components/tooltip'\nimport { Space } from '@/components/space'\nimport { Button } from '@/components/button'\nimport { useDicts, DictItem } from '@/dicts'\nimport type { AnyObject, ColumnProps, ColumnGroupType, Actions, TableProps } from './types'\n\nfunction handleStatus(\n  status: ColumnProps<any>['status'],\n  value: any,\n  record: AnyObject,\n  index: number\n) {\n  let statusStr = typeof status === 'function' ? status(value, record, index) : status\n  switch (statusStr) {\n    case 'completed':\n      return 'link'\n    case 'invalid':\n      return 'disabled'\n    case 'waiting':\n      return 'warning'\n    case 'default':\n      return null\n    default:\n      return statusStr || null\n  }\n}\n\nfunction handleColumn<T extends AnyObject = AnyObject>(\n  col: ColumnProps<T>,\n  dicts: ReturnType<typeof useDicts>,\n  navigate: ReturnType<typeof useNavigate>\n): ColumnProps<T> {\n  let {\n    status,\n    bold,\n    thousand: thousandNum,\n    link,\n    precision,\n    zerofill: fill,\n    percent,\n    suffix,\n    title,\n    tooltip,\n    dictCode,\n    render: renderFunc,\n    ...args\n  } = col\n  const render = (value: any, record: T, index: number) => {\n    const sx: SxProps = {}\n    value = renderFunc?.(value, record, index) ?? value\n    // 处理字典\n    if (dictCode) {\n      const dict = dicts[dictCode]\n      const item = dict?.find((item: DictItem) => item.value === value)\n      if (item) {\n        value = item.label\n        status = item.status\n      }\n    }\n    // 处理超链接\n    if (link) {\n      link = typeof link === 'function' ? link(value, record, index) : link\n      if (link) {\n        sx.color = 'link'\n        sx.cursor = 'pointer'\n      }\n    }\n    // 处理状态\n    if (status) sx.color = handleStatus(status, value, record, index)\n    // 处理粗体\n    if (bold) sx.fontWeight = 'bold'\n    if (isNumber(value)) {\n      // 处理百分比(先*100,处理完千分位和四舍五入等在添加%号)\n      if (percent) value = multiply(value, 100)\n      // 处理四舍五入\n      if (precision === true) precision = 2\n      if (isNumber(precision)) value = round(value, precision)\n      // 小数补零\n      if (fill === true) fill = precision || 0\n      if (isNumber(fill)) value = zerofill(value, fill)\n      // 处理千分位\n      if (typeof thousandNum === 'function' ? thousandNum(value, record, index) : col.thousand) {\n        value = thousands(value)\n      }\n      // 添加%\n      if (percent) value = `${value}%`\n    }\n    return (\n      <span sx={sx} onClick={link ? () => navigate(link as string) : undefined}>\n        {value}\n        {suffix ?? null}\n      </span>\n    )\n  }\n  const children = (col as ColumnGroupType<T>).children\n  return {\n    ...args,\n    children: children?.map(col => handleColumn(col, dicts, navigate)) ?? undefined,\n    title: tooltip\n      ? (...arrs) => (\n          <span>\n            {typeof title === 'function' ? title(...arrs) : title}\n            <Tooltip title={tooltip} verticalAlign='middle' ml={1} cursor='pointer'>\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n        )\n      : title,\n    render\n  }\n}\n\nfunction handleActions<T extends AnyObject = AnyObject>(\n  actions: Actions<T>[],\n  actionFixed: TableProps['actionFixed'],\n  actionTitle: TableProps['actionTitle'],\n  actionWidth: TableProps['actionWidth']\n): ColumnProps<T> {\n  return {\n    title: actionTitle || '操作',\n    dataIndex: '__actions',\n    width: actionWidth,\n    fixed: actionFixed ?? 'right',\n    render: (_, record, index) => (\n      <Space>\n        {actions.map((action, i) => {\n          let { title, visible = true, render, className, type, onClick, ...args } = action\n          const show = typeof visible === 'function' ? visible(record, index) : visible\n          if (!show) return null\n          if (typeof render === 'function') title = render(record, index)\n          if (typeof className === 'function') className = className(record, index)\n          return (\n            <Button\n              key={i}\n              p={0}\n              type={type ?? 'link'}\n              className={className}\n              onClick={e => onClick?.(e, record, index)}\n              {...args}\n            >\n              {title}\n            </Button>\n          )\n        })}\n      </Space>\n    )\n  }\n}\nexport function useColumns<T extends AnyObject = AnyObject>(\n  columns: ColumnProps<T>[],\n  actions?: Actions<T>[],\n  actionFixed?: TableProps['actionFixed'],\n  actionTitle?: TableProps['actionTitle'],\n  actionWidth?: TableProps['actionWidth']\n): ColumnProps<T>[] {\n  const navigate = useNavigate()\n  const dicts = useDicts()\n  return useMemo(\n    () =>\n      columns\n        .map(col => handleColumn(col, dicts, navigate))\n        .concat(handleActions(actions || [], actionFixed, actionTitle, actionWidth)),\n    [columns, actions, dicts, navigate, actionFixed, actionTitle, actionWidth]\n  )\n}\n","import { Tooltip as AntdTooltip } from 'antd'\nimport { styled } from '@quick/cssinjs'\n\nexport const Tooltip = styled(AntdTooltip)\n\nexport type TooltipProps = React.ComponentProps<typeof Tooltip>\n","import { Space as AntdSpace } from 'antd'\nimport { styled } from '@quick/cssinjs'\n\nexport const Space = styled(AntdSpace)\n\nexport type SpaceProps = typeof AntdSpace\n","import { useMemo } from 'react'\nimport { Table } from 'antd'\nimport { isNumber, round, zerofill, thousands, multiply } from '@quick/utils'\nimport {\n  ColumnProps,\n  ColumnType,\n  ColumnGroupType,\n  AnyObject,\n  TableProps,\n  SummaryProps\n} from './types'\n\nconst { Summary } = Table\n\nfunction flatten(arr: ColumnProps<any>[]) {\n  return arr.reduce((acc, props) => {\n    const { children, ...rest } = props as ColumnGroupType\n    acc.push(rest)\n    if (Array.isArray(children)) acc.push(...flatten(children))\n    return acc\n  }, [] as ColumnType[])\n}\n\nexport function useSummary<T extends AnyObject = AnyObject>(\n  columns: ColumnProps<T>[],\n  summaryMap?: Record<string, number>,\n  rowSelection?: TableProps<T>['rowSelection']\n) {\n  return useMemo(() => {\n    const summaryList = flatten(columns)\n    const hasTotal = summaryList.some(item => item.total)\n    return hasTotal\n      ? () => (\n          <Summary fixed>\n            <Summary.Row>\n              {rowSelection && <Summary.Cell index={0} />}\n              <Summary.Cell index={rowSelection ? 1 : 0}>合计</Summary.Cell>\n              {summaryList.slice(1).map((item, index) => {\n                let defaultSummary: SummaryProps = { thousand: true }\n                let value: number | string | undefined =\n                  summaryMap?.[item.totalField ?? (item.dataIndex as string)]\n                if (typeof item.total === 'object') {\n                  defaultSummary = { ...defaultSummary, ...item.total }\n                }\n                let {\n                  precision,\n                  zerofill: fill,\n                  percent,\n                  thousand: thousandNum,\n                  formatter,\n                  className\n                } = defaultSummary\n                if (typeof formatter === 'function') {\n                  value = formatter(value)\n                }\n                if (isNumber(value)) {\n                  // 处理百分比\n                  if (percent) value = multiply(Number(value), 100)\n                  // 处理四舍五入\n                  if (precision === true) precision = 2\n                  if (isNumber(precision)) value = round(value, precision)\n                  // 小数补零\n                  if (fill === true) fill = precision || 0\n                  if (isNumber(fill)) value = zerofill(value, fill)\n                  // 处理千分位\n                  if (thousandNum) value = value ? thousands(value) : value\n                  // 添加%\n                  if (percent) value = `${value}%`\n                }\n                className = typeof className === 'function' ? className(value) : className\n                return (\n                  <Summary.Cell\n                    className={className ?? undefined}\n                    key={index + 1}\n                    index={index + 1}\n                  >\n                    {value ?? null}\n                  </Summary.Cell>\n                )\n              })}\n            </Summary.Row>\n          </Summary>\n        )\n      : undefined\n  }, [columns, summaryMap])\n}\n"],"mappings":"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","names":["styled","jsx","styled","styled","styled","useMemo","styled","styled","jsx","item","col","useMemo","useMemo","isNumber","round","zerofill","thousands","multiply","jsx","jsxs","jsx","styled","Table"]}