{"version":3,"sources":["../../../src/components/table/summary.tsx"],"sourcesContent":["import { useMemo } from 'react'\nimport { Table } from 'antd'\nimport { isNumber, round, zerofill, thousands, multiply } from '@quick/utils'\nimport {\n  ColumnProps,\n  ColumnType,\n  ColumnGroupType,\n  AnyObject,\n  TableProps,\n  SummaryProps\n} from './types'\n\nconst { Summary } = Table\n\nfunction flatten(arr: ColumnProps<any>[]) {\n  return arr.reduce((acc, props) => {\n    const { children, ...rest } = props as ColumnGroupType\n    acc.push(rest)\n    if (Array.isArray(children)) acc.push(...flatten(children))\n    return acc\n  }, [] as ColumnType[])\n}\n\nexport function useSummary<T extends AnyObject = AnyObject>(\n  columns: ColumnProps<T>[],\n  summaryMap?: Record<string, number>,\n  rowSelection?: TableProps<T>['rowSelection']\n) {\n  return useMemo(() => {\n    const summaryList = flatten(columns)\n    const hasTotal = summaryList.some(item => item.total)\n    return hasTotal\n      ? () => (\n          <Summary fixed>\n            <Summary.Row>\n              {rowSelection && <Summary.Cell index={0} />}\n              <Summary.Cell index={rowSelection ? 1 : 0}>合计</Summary.Cell>\n              {summaryList.slice(1).map((item, index) => {\n                let defaultSummary: SummaryProps = { thousand: true }\n                let value: number | string | undefined =\n                  summaryMap?.[item.totalField ?? (item.dataIndex as string)]\n                if (typeof item.total === 'object') {\n                  defaultSummary = { ...defaultSummary, ...item.total }\n                }\n                let {\n                  precision,\n                  zerofill: fill,\n                  percent,\n                  thousand: thousandNum,\n                  formatter,\n                  className\n                } = defaultSummary\n                if (typeof formatter === 'function') {\n                  value = formatter(value)\n                }\n                if (isNumber(value)) {\n                  // 处理百分比\n                  if (percent) value = multiply(Number(value), 100)\n                  // 处理四舍五入\n                  if (precision === true) precision = 2\n                  if (isNumber(precision)) value = round(value, precision)\n                  // 小数补零\n                  if (fill === true) fill = precision || 0\n                  if (isNumber(fill)) value = zerofill(value, fill)\n                  // 处理千分位\n                  if (thousandNum) value = value ? thousands(value) : value\n                  // 添加%\n                  if (percent) value = `${value}%`\n                }\n                className = typeof className === 'function' ? className(value) : className\n                return (\n                  <Summary.Cell\n                    className={className ?? undefined}\n                    key={index + 1}\n                    index={index + 1}\n                  >\n                    {value ?? null}\n                  </Summary.Cell>\n                )\n              })}\n            </Summary.Row>\n          </Summary>\n        )\n      : undefined\n  }, [columns, summaryMap])\n}\n"],"mappings":";AAAA,SAAS,eAAe;AACxB,SAAS,aAAa;AACtB,SAAS,UAAU,OAAO,UAAU,WAAW,gBAAgB;AAgCnD,SACmB,KADnB;AAtBZ,IAAM,EAAE,QAAQ,IAAI;AAEpB,SAAS,QAAQ,KAAyB;AACxC,SAAO,IAAI,OAAO,CAAC,KAAK,UAAU;AAChC,UAAM,EAAE,UAAU,GAAG,KAAK,IAAI;AAC9B,QAAI,KAAK,IAAI;AACb,QAAI,MAAM,QAAQ,QAAQ,EAAG,KAAI,KAAK,GAAG,QAAQ,QAAQ,CAAC;AAC1D,WAAO;AAAA,EACT,GAAG,CAAC,CAAiB;AACvB;AAEO,SAAS,WACd,SACA,YACA,cACA;AACA,SAAO,QAAQ,MAAM;AACnB,UAAM,cAAc,QAAQ,OAAO;AACnC,UAAM,WAAW,YAAY,KAAK,UAAQ,KAAK,KAAK;AACpD,WAAO,WACH,MACE,oBAAC,WAAQ,OAAK,MACZ,+BAAC,QAAQ,KAAR,EACE;AAAA,sBAAgB,oBAAC,QAAQ,MAAR,EAAa,OAAO,GAAG;AAAA,MACzC,oBAAC,QAAQ,MAAR,EAAa,OAAO,eAAe,IAAI,GAAG,0BAAE;AAAA,MAC5C,YAAY,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,UAAU;AACzC,YAAI,iBAA+B,EAAE,UAAU,KAAK;AACpD,YAAI,QACF,aAAa,KAAK,cAAe,KAAK,SAAoB;AAC5D,YAAI,OAAO,KAAK,UAAU,UAAU;AAClC,2BAAiB,EAAE,GAAG,gBAAgB,GAAG,KAAK,MAAM;AAAA,QACtD;AACA,YAAI;AAAA,UACF;AAAA,UACA,UAAU;AAAA,UACV;AAAA,UACA,UAAU;AAAA,UACV;AAAA,UACA;AAAA,QACF,IAAI;AACJ,YAAI,OAAO,cAAc,YAAY;AACnC,kBAAQ,UAAU,KAAK;AAAA,QACzB;AACA,YAAI,SAAS,KAAK,GAAG;AAEnB,cAAI,QAAS,SAAQ,SAAS,OAAO,KAAK,GAAG,GAAG;AAEhD,cAAI,cAAc,KAAM,aAAY;AACpC,cAAI,SAAS,SAAS,EAAG,SAAQ,MAAM,OAAO,SAAS;AAEvD,cAAI,SAAS,KAAM,QAAO,aAAa;AACvC,cAAI,SAAS,IAAI,EAAG,SAAQ,SAAS,OAAO,IAAI;AAEhD,cAAI,YAAa,SAAQ,QAAQ,UAAU,KAAK,IAAI;AAEpD,cAAI,QAAS,SAAQ,GAAG,KAAK;AAAA,QAC/B;AACA,oBAAY,OAAO,cAAc,aAAa,UAAU,KAAK,IAAI;AACjE,eACE;AAAA,UAAC,QAAQ;AAAA,UAAR;AAAA,YACC,WAAW,aAAa;AAAA,YAExB,OAAO,QAAQ;AAAA,YAEd,mBAAS;AAAA;AAAA,UAHL,QAAQ;AAAA,QAIf;AAAA,MAEJ,CAAC;AAAA,OACH,GACF,IAEF;AAAA,EACN,GAAG,CAAC,SAAS,UAAU,CAAC;AAC1B;","names":[]}