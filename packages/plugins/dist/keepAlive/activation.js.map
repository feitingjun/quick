{"version":3,"sources":["../../src/keepAlive/activation.ts"],"sourcesContent":["import { Context, ReactNode } from 'react'\n\nexport interface Bridge<T=any> {\n  context: Context<T>,\n  value: T\n}\n\nexport default class Activation {\n  name: string\n  /**组件的dom */\n  dom: HTMLDivElement|null = null\n  /**组件是否激活 */\n  private _active: boolean = false\n  /**组件的props */\n  props: Record<string, any> = {}\n  /**桥接的bridges列表 */\n  bridges: Bridge[] = []\n  /**这个组件实际的容器 */\n  wrapper: HTMLDivElement|null = null\n  /**滚动位置缓存 */\n  scroll: Map<HTMLElement, { x: number, y: number }> = new Map()\n  /**当前组件的children */\n  children: ReactNode|null = null\n  /**当前组件变更监听 */\n  listeners: Set<(at:Activation) => void> = new Set()\n  /**当前组件active状态变更监听 */\n  activeListeners: Set<(active: boolean) => void> = new Set()\n  /**子组件内的useActivate */\n  activateHooks: Set<() => void> = new Set()\n  /**子组件内的useUnactivate */\n  unactivateHooks: Set<() => void> = new Set()\n  constructor(name: string){\n    this.name = name\n  }\n  get active(){\n    return this._active\n  }\n  set active(active: boolean){\n    if(active === this._active) return\n    this.activeListeners.forEach(fn => fn(active))\n    this._active = active\n  }\n  /**添加变更监听器 */\n  subscribe = (cb: () => void) => {\n    this.listeners.add(cb)\n    return () => this.listeners.delete(cb)\n  }\n  /**触发变更 */\n  update = () => {\n    this.listeners.forEach(fn => fn(this))\n  }\n  /**保存滚动位置 */\n  saveScroll = (ele: HTMLElement|null) => {\n    if(!ele) return\n    this.scroll.set(ele, {\n      x: ele.scrollLeft,\n      y: ele.scrollTop\n    })\n    if(ele.childNodes.length  > 0){\n      ele.childNodes.forEach(child => {\n        if(child instanceof HTMLElement && !child.classList.contains('ka-alive')){\n          this.saveScroll(child)\n        }\n      })\n    }\n  }\n  /**恢复滚动位置 */\n  restoreScroll = (ele: HTMLElement|null) => {\n    if(!ele) return\n    const scroll = this.scroll.get(ele)\n    if(scroll){\n      ele.scrollTo(scroll.x, scroll.y)\n    }\n    if(ele.childNodes.length  > 0){\n      ele.childNodes.forEach(child => {\n        if(child instanceof HTMLElement){\n          this.restoreScroll(child)\n        }\n      })\n    }\n  }\n}"],"mappings":";AAOA,IAAqB,aAArB,MAAgC;AAAA,EAC9B;AAAA;AAAA,EAEA,MAA2B;AAAA;AAAA,EAEnB,UAAmB;AAAA;AAAA,EAE3B,QAA6B,CAAC;AAAA;AAAA,EAE9B,UAAoB,CAAC;AAAA;AAAA,EAErB,UAA+B;AAAA;AAAA,EAE/B,SAAqD,oBAAI,IAAI;AAAA;AAAA,EAE7D,WAA2B;AAAA;AAAA,EAE3B,YAA0C,oBAAI,IAAI;AAAA;AAAA,EAElD,kBAAkD,oBAAI,IAAI;AAAA;AAAA,EAE1D,gBAAiC,oBAAI,IAAI;AAAA;AAAA,EAEzC,kBAAmC,oBAAI,IAAI;AAAA,EAC3C,YAAY,MAAa;AACvB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,SAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,OAAO,QAAgB;AACzB,QAAG,WAAW,KAAK,QAAS;AAC5B,SAAK,gBAAgB,QAAQ,QAAM,GAAG,MAAM,CAAC;AAC7C,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA,EAEA,YAAY,CAAC,OAAmB;AAC9B,SAAK,UAAU,IAAI,EAAE;AACrB,WAAO,MAAM,KAAK,UAAU,OAAO,EAAE;AAAA,EACvC;AAAA;AAAA,EAEA,SAAS,MAAM;AACb,SAAK,UAAU,QAAQ,QAAM,GAAG,IAAI,CAAC;AAAA,EACvC;AAAA;AAAA,EAEA,aAAa,CAAC,QAA0B;AACtC,QAAG,CAAC,IAAK;AACT,SAAK,OAAO,IAAI,KAAK;AAAA,MACnB,GAAG,IAAI;AAAA,MACP,GAAG,IAAI;AAAA,IACT,CAAC;AACD,QAAG,IAAI,WAAW,SAAU,GAAE;AAC5B,UAAI,WAAW,QAAQ,WAAS;AAC9B,YAAG,iBAAiB,eAAe,CAAC,MAAM,UAAU,SAAS,UAAU,GAAE;AACvE,eAAK,WAAW,KAAK;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA;AAAA,EAEA,gBAAgB,CAAC,QAA0B;AACzC,QAAG,CAAC,IAAK;AACT,UAAM,SAAS,KAAK,OAAO,IAAI,GAAG;AAClC,QAAG,QAAO;AACR,UAAI,SAAS,OAAO,GAAG,OAAO,CAAC;AAAA,IACjC;AACA,QAAG,IAAI,WAAW,SAAU,GAAE;AAC5B,UAAI,WAAW,QAAQ,WAAS;AAC9B,YAAG,iBAAiB,aAAY;AAC9B,eAAK,cAAc,KAAK;AAAA,QAC1B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;","names":[]}