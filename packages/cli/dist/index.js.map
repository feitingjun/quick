{"version":3,"sources":["../src/index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { existsSync, mkdirSync } from 'fs'\nimport { join } from 'path'\nimport { input } from '@inquirer/prompts'\nimport { chalk } from '@quick/utils'\nimport {\n  writeAppTs,\n  writeIndexPageTsx,\n  writePackageJson,\n  writeTsConfigJson,\n  writeViteConfigTs,\n  writeIndexHtml\n} from './writeFile'\n\nasync function createApp() {\n  const projectName = await input({\n    message: '请输入项目名称',\n    default: 'my-app'\n  })\n  const srcDir = await input({ message: '请输入src文件夹名称', default: 'src' })\n  const description = await input({ message: '请输入项目描述' })\n  // 判断文件夹是否存在\n  if (existsSync(projectName)) {\n    console.log(chalk.red(`${projectName}文件夹已存在`))\n    return\n  }\n  // 项目跟目录\n  const root = join(process.cwd(), projectName)\n  // 创建项目目录\n  mkdirSync(join(process.cwd(), projectName, srcDir), { recursive: true })\n  // 创建package.json文件\n  writePackageJson(root, description)\n  // 创建tsconfig.json文件\n  writeTsConfigJson(root, srcDir)\n  // 创建vite.config.ts文件\n  writeViteConfigTs(root)\n  // 创建index.html文件\n  writeIndexHtml(root)\n  // 创建src/app.tsx文件\n  writeAppTs(root, srcDir)\n  // 创建page.tsx文件\n  writeIndexPageTsx(root, srcDir)\n  console.log(chalk.green(`项目${projectName}创建成功`))\n}\n\ncreateApp()\n"],"mappings":";;;;;;;;;;;AACA,SAAS,YAAY,iBAAiB;AACtC,SAAS,YAAY;AACrB,SAAS,aAAa;AACtB,SAAS,aAAa;AAUtB,eAAe,YAAY;AACzB,QAAM,cAAc,MAAM,MAAM;AAAA,IAC9B,SAAS;AAAA,IACT,SAAS;AAAA,EACX,CAAC;AACD,QAAM,SAAS,MAAM,MAAM,EAAE,SAAS,uDAAe,SAAS,MAAM,CAAC;AACrE,QAAM,cAAc,MAAM,MAAM,EAAE,SAAS,6CAAU,CAAC;AAEtD,MAAI,WAAW,WAAW,GAAG;AAC3B,YAAQ,IAAI,MAAM,IAAI,GAAG,WAAW,sCAAQ,CAAC;AAC7C;AAAA,EACF;AAEA,QAAM,OAAO,KAAK,QAAQ,IAAI,GAAG,WAAW;AAE5C,YAAU,KAAK,QAAQ,IAAI,GAAG,aAAa,MAAM,GAAG,EAAE,WAAW,KAAK,CAAC;AAEvE,mBAAiB,MAAM,WAAW;AAElC,oBAAkB,MAAM,MAAM;AAE9B,oBAAkB,IAAI;AAEtB,iBAAe,IAAI;AAEnB,aAAW,MAAM,MAAM;AAEvB,oBAAkB,MAAM,MAAM;AAC9B,UAAQ,IAAI,MAAM,MAAM,eAAK,WAAW,0BAAM,CAAC;AACjD;AAEA,UAAU;","names":[]}