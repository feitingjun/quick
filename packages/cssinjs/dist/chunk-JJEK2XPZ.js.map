{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import * as CSS from 'csstype'\n// 原始styled-system定义的类型仅包含通过主题定义的部分，在./styled-system/define.ts中加上了原生css的属性定义\nimport {\n  type Theme,\n  type ThemeDefine,\n  ColorProps,\n  SpaceProps,\n  LayoutProps,\n  FlexboxProps,\n  BorderProps,\n  PositionProps,\n  ShadowProps,\n  TypographyProps,\n  BackgroundProps,\n  GridProps,\n  OpacityProps\n} from './styled-system/define'\nimport { CustomPseudos } from './custom-pseudos'\n\nexport const defineTheme = <T extends ThemeDefine>(theme: T) => theme\n\nexport type ValueOf<T> = T[keyof T]\n\nexport type CSSProperties<T extends Theme = Theme> = ColorProps<T> &\n  SpaceProps<T> &\n  LayoutProps<T> &\n  FlexboxProps<T> &\n  BorderProps<T> &\n  PositionProps<T> &\n  ShadowProps<T> &\n  TypographyProps<T> &\n  BackgroundProps<T> &\n  GridProps<T> &\n  OpacityProps<T>\n\nexport type CSSVars<T extends Theme = Theme> = {\n  [key: `--${string}`]: ValueOf<CSSProperties<T>>\n}\n\ntype KnownPseudos = CSS.Pseudos | CustomPseudos\n\nexport type CSSPseudos<T extends Theme = Theme> = {\n  // ✅ 已知伪类有完整提示\n  [K in KnownPseudos]?: CSSProperties<T> &\n    CSSVars<T> & {\n      content: `\"${string}\"`\n    }\n} & {\n  // ✅ 同时支持自定义复合选择器，如 \"span:hover\"\n  [K: `${string}${KnownPseudos}`]: CSSProperties<T> &\n    CSSVars<T> & {\n      content: `\"${string}\"`\n    }\n}\n\nexport type CSSOthersObject<T extends Theme = Theme> = {\n  [propertiesName: string]: SxProps<T> | string | number | null\n}\n\nexport type SxProps<T extends Theme = Theme> =\n  | Partial<CSSProperties<T> & CSSVars<T> & CSSPseudos<T>>\n  | CSSOthersObject<T>\n"],"mappings":";AAmBO,IAAM,cAAc,CAAwB,UAAa;","names":[]}